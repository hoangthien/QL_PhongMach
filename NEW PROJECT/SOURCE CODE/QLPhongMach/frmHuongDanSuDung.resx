<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Các menu của trương trình:
- Menu “Hệ thồng”:
+ Menu “Đăng nhập” dùng để đăng nhập vào hệ thống.
+ Menu “Đăng xuất” thoát ra khỏi hệ thống.
+ Menu “Đổi mật khẩu” dùng để đổi mật khẩu khi cần.
+ Menu “Thay đổi thông tin cá nhân” dùng để thay đổi thông tin khi cần.
+ Menu “Đóng” dùng để đóng form đang được active
+ Menu “Thoát” dùng để thoát khỏi hệ thống.
- Menu “Quản Lý”:
+ Menu “Người dùng” dùng để quản lý thông tin người dùng. Chỉ có người Admin mời được vào.
- Menu “Sổ sách”:
+ Menu “Danh sách khám bệnh” chứa thông tin các bệnh nhân khám bệnh trong một ngày.
+ Menu “Phiếu khám bệnh” chứa thông tin của một phiếu khám của một bệnh nhân.
+ Menu “Thuốc” dùng để quản lý thuốc của hệ thống.
- Menu “Thống kê”:
+ Menu “Doanh thu” báo cáo doanh thu của một tháng theo ngày.
+ Menu “Sử dụng thuốc” báo cáo sử dụng thuốc trong tháng.
- Menu “Cửa sổ”: hiển thị các cửa sổ đang mở
- Menu “Tìm kiếm”
+ Menu “Bệnh nhân” dùng để tìm kiếm bệnh nhân theo ngày khám.
- Menu “Trợ giúp”
+ Menu “Hướng dẫn sử dụng” hướng dẫn sử dụng phần mền.
Các form trong chương trình:
+ Form đăng nhập. Được load lên khi click vào menu Đăng Nhập
+ Form đổi mật khẩu. Được load lên khi click vào menu Đổi mật khẩu
+ Form cập nhật thông tin cá nhân. Được load lên khi click vào menu “Thay đổi thông tin cá nhân”.
+ Form danh sách người sử dụng chương trình. Được load lên khi click vào menu “Người dùng”. Trong form nay bạn có thể thêm và xóa một người dùng. Chỉ sử dụng cho Admin. Bạn muôn thêm một bệnh nhân, bạn phải nhấp vào nút xóa trắng trước. Sau đó nhập đầy đủ thông tin trong các text box. Còn muốn xóa bệnh nhân nào thì phải chọn bệnh nhân trước khi xóa.
+ Form danh sách khám bệnh. Được load lên khi click vào menu Danh sách khám bệnh. Bạn có thể thêm, xóa, cập nhật thông tin cho một bệnh nhân. Bạn có thể thay đổi số lượng bệnh nhân tối đa trong ngày.
+ Form Phiếu Khám Bệnh. Được load lên khi click vào menu “Phiếu Khám Bệnh”. Muốn thêm trước tiên bạn nhấn nút Xóa trằng để bật sáng nút thêm. Sau khi cung cấp đầy đủ thông tin cho phiếu khám bạn nhấp nút thêm. Muốn sủa bạn có thể chỉnh sửa trực tiếp. Sau đó nhấp nút sửa. Bạn chỉ có thể chỉnh sửa 1 hàng duy nhất. Xóa thì chọn 1 loại chi tiết rồi click nút xóa. Nút xem hóa đơn dùng để xem tiền khám và tiền thuốc. Trong form hóa đơn này bạn có thể bỏ check có sử dụng thuốc trong trường hợp bệnh nhân không mua thuốc.
+ Form Quản lý thuốc. Được load lên khi click vào menu Thuốc. Bạn có thê thêm, xóa, sửa tương tư như form Danh sách khám bệnh.
+ Form Báo cáo doanh thu theo ngày. Được load lên khi click vào menu Doanh thu. Bạn có thể xem doanh thu của từng tháng. Và nhấn nút Xem báo cáo đế có thê in ra file.
+ Form Báo cáo sử dụng thuốc. Đươc load lên từ menu Sử dụng thuốc. Cũng tương tự như báo cáo doanh thu.</value>
  </data>
</root>